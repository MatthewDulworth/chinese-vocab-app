{"version":3,"sources":["App.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DATABASE","database","vocabDatabase","ref","MainMenu","signIn","signOut","signedIn","handleSearch","validFluencies","validPOS","useState","signInOpen","setSignInOpen","id","SearchBar","onClick","SignInDialouge","email","password","handleCloseSignIn","setPassword","setEmail","htmlFor","type","value","onChange","e","target","text","setText","language","setLanguage","fluency","setFluency","partOfSpeech","setPOS","POSOptions","Array","from","map","pos","camelToTitle","fluencyOptions","VocabHeader","NotesInput","notes","handleNotesInputDone","newNotes","setNewNotes","textArea","useRef","useEffect","current","focus","setSelectionRange","className","rows","cols","VocabEntry","simplified","traditional","pinyin","englishString","english","posString","partsOfSpeech","_key","canEdit","handleChange","handleEntryChineseUnfocus","notesExpanded","setNotesExpanded","textAreaProps","wrap","disabled","name","onBlur","spellCheck","readOnly","VocabEntryWrapper","vocabEntry","handleCellChange","handleEntryDelete","handleEntrySaveChanges","handleEntryDiscardChanges","edited","VocabTable","vocabList","editedVocab","tableBody","key","has","camelCase","replace","match","toUpperCase","trim","useFetchSet","refStr","state","setState","listener","on","snapshot","newState","Set","forEach","add","err","console","log","off","cloneVocabMap","clone","Map","entry","set","cloneVocabEntry","entryClone","propertyKey","propertyValue","isArray","filterObj","obj","predicate","Object","keys","filter","reduce","res","toPinyin","chinese","pinyin4js","convertToPinyinString","WITH_TONE_MARK","App","renderedVocab","setRenderedVocab","fullVocabMap","setEditedVocab","isInitialMount","setSignedIn","vocabEntries","entrySnapshot","val","get","join","error","auth","onAuthStateChanged","user","signInWithEmailAndPassword","catch","code","message","window","confirm","preventDefault","newRenderVocab","anyFluency","anyPOS","anyText","entryHasText","includes","all","str","needsRerender","convertToTraditionalChinese","convertToSimplifiedChinese","child","remove","delete","updatedEntry","split","s","validation","update","unsaved","blankVocab","push","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAkBCA,IAASC,KAAKC,OAAkDF,IAASG,MAAlDH,IAASI,cATZ,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,qDACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAWZ,IAASa,WACpBC,EAAgBF,EAASG,IAAI,UAEnC,SAASC,EAAT,GAOI,IANFC,EAMC,EANDA,OACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,eACAC,EACC,EADDA,SAEA,EAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,OACE,sBAAKC,GAAG,WAAR,UACE,cAACC,EAAD,CACEP,aAAcA,EACdC,eAAgBA,EAChBC,SAAUA,KAGTH,IAAaK,GAAe,wBAAQI,QAAS,kBAAMH,GAAc,IAArC,qBAC9BN,GAAY,wBAAQS,QAASV,EAAjB,sBACZM,GAAc,cAACK,EAAD,CAAgBZ,OAfd,SAACa,EAAOC,GAC3Bd,EAAOa,EAAOC,GACdN,GAAc,IAayCO,kBAAmB,kBAAMP,GAAc,SAMlG,SAASI,EAAT,GAGI,IAFFZ,EAEC,EAFDA,OACAe,EACC,EADDA,kBAEA,EAAgCT,mBAAS,IAAzC,mBAAOQ,EAAP,KAAiBE,EAAjB,KACA,EAA0BV,mBAAS,IAAnC,mBAAOO,EAAP,KAAcI,EAAd,KAEA,OACE,sBAAKR,GAAG,iBAAR,UACE,uBAAOS,QAAQ,QAAf,oBACA,uBAAOT,GAAG,QAAQU,KAAK,QAAQC,MAAOP,EAAOQ,SAAU,SAACC,GAAD,OAAOL,EAASK,EAAEC,OAAOH,UAChF,uBAAOF,QAAQ,WAAf,uBACA,uBAAOT,GAAG,WAAWU,KAAK,WAAWC,MAAON,EAAUO,SAAU,SAACC,GAAD,OAAON,EAAYM,EAAEC,OAAOH,UAC5F,wBAAQT,QAAS,SAACW,GAAD,OAAOtB,EAAOa,EAAOC,IAAtC,qBACA,wBAAQH,QAASI,EAAjB,uBAKN,SAASL,EAAT,GAII,IAHFP,EAGC,EAHDA,aACAC,EAEC,EAFDA,eACAC,EACC,EADDA,SAEA,EAAwBC,mBAAS,IAAjC,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAAgCnB,mBAAS,WAAzC,mBAAOoB,EAAP,KAAiBC,EAAjB,KACA,EAA8BrB,mBAAS,OAAvC,mBAAOsB,EAAP,KAAgBC,EAAhB,KACA,EAA+BvB,mBAAS,OAAxC,mBAAOwB,EAAP,KAAqBC,EAArB,KAEMC,EAAa3B,EAAW4B,MAAMC,KAAK7B,GACtC8B,KAAI,SAACC,GAAD,OAAS,wBAAQhB,MAAOgB,EAAf,SAA+BC,EAAaD,IAAnBA,MAAqC,GAExEE,EAAiBlC,EAAiB6B,MAAMC,KAAK9B,GAChD+B,KAAI,SAAAP,GAAO,OAAI,wBAAQR,MAAOQ,EAAf,SAAuCS,EAAaT,IAAvBA,MAA6C,GAE5F,OACE,sBAAKnB,GAAG,YAAR,UACE,yCACA,oDAEE,yBAAQW,MAAOM,EAAUL,SAAU,SAACC,GAAD,OAAOK,EAAYL,EAAEC,OAAOH,QAA/D,UACE,wBAAQA,MAAM,aAAd,uCACA,wBAAQA,MAAM,cAAd,wCACA,wBAAQA,MAAM,SAAd,0BACA,wBAAQA,MAAM,UAAd,wBANJ,kBAUE,yBAAQA,MAAOU,EAAcT,SAAU,SAACC,GAAD,OAAOS,EAAOT,EAAEC,OAAOH,QAA9D,UACE,wBAAQA,MAAM,MAAd,iBACCY,KAZL,iBAgBE,yBAAQZ,MAAOQ,EAASP,SAAU,SAACC,GAAD,OAAOO,EAAWP,EAAEC,OAAOH,QAA7D,UACE,wBAAQA,MAAM,MAAd,iBACCkB,KAGH,uBAAOnB,KAAK,OAAOC,MAAOI,EAAMH,SAAU,SAACC,GAAD,OAAOG,EAAQH,EAAEC,OAAOH,UAElE,wBAAQT,QAAS,SAACW,GAAD,OAAOnB,EAAamB,EAAGE,EAAME,EAAUI,EAAcF,IAAtE,uBAMR,SAASW,IACP,OACE,yBAAQ9B,GAAG,cAAX,UACE,6CACA,8CACA,yCACA,qBAAKA,GAAG,UAAR,qBACA,kDACA,0CACA,qBAAKA,GAAG,QAAR,qBACA,qBAAKA,GAAG,iBAKd,SAAS+B,EAAT,GAGI,IAFFC,EAEC,EAFDA,MACAC,EACC,EADDA,qBAEA,EAAgCpC,mBAASmC,GAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,iBAAO,MAOxB,OALAC,qBAAU,WACRF,EAASG,QAAQC,QACjBJ,EAASG,QAAQE,kBAAkBL,EAASG,QAAQ5B,MAAMnC,OAAQ4D,EAASG,QAAQ5B,MAAMnC,UACxF,IAGD,qBAAKkE,UAAU,aAAf,SACE,gCACE,0BAAUC,KAAK,KAAKC,KAAK,KAAKjC,MAAOuB,EAAUtB,SAAU,SAACC,GAAD,OAAOsB,EAAYtB,EAAEC,OAAOH,QAAQtB,IAAK+C,IAClG,wBAAQlC,QAAS,SAACW,GAAD,OAAOoB,EAAqBpB,EAAGqB,IAAhD,uBAMR,SAASW,EAAT,GAgBI,IAfFC,EAeC,EAfDA,WACAC,EAcC,EAdDA,YACAC,EAaC,EAbDA,OAEAC,GAWC,EAZDC,QAYC,EAXDD,eAEAE,GASC,EAVDC,cAUC,EATDD,WACAhC,EAQC,EARDA,QACAa,EAOC,EAPDA,MACAqB,EAMC,EANDA,KACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,0BACAvB,EAEC,EAFDA,qBACAtC,EACC,EADDA,eAEA,EAA0CE,oBAAS,GAAnD,mBAAO4D,EAAP,KAAsBC,EAAtB,KACM7B,EAAiBL,MAAMC,KAAK9B,GAAgB+B,KAAI,SAAAP,GAAO,OAAI,wBAAsBR,MAAOQ,EAA7B,SAAuCS,EAAaT,IAAvCA,MAMxEwC,EAAgB,CACpBC,KAAM,OACNhD,SAAU2C,EACVM,UAAWP,EACXZ,UAAW,aAGb,OACE,sBAAKA,UAAU,aAAf,UAEE,cAAC,IAAD,aACEoB,KAAK,aACLnD,MAAOmC,EACPiB,OAAQ,SAAClD,GAAD,OAAO2C,EAA0B3C,EAAGwC,KACxCM,IAEN,cAAC,IAAD,aACEG,KAAK,cACLnD,MAAOoC,EACPgB,OAAQ,SAAClD,GAAD,OAAO2C,EAA0B3C,EAAGwC,KACxCM,IAEN,cAAC,IAAD,aACEG,KAAK,SACLnD,MAAOqC,GACHW,IAEN,cAAC,IAAD,aAAkBG,KAAK,gBACrBnD,MAAOsC,EACPe,WAAW,QACPL,IAEN,cAAC,IAAD,aAAkBG,KAAK,YACrBnD,MAAOwC,EACPa,WAAW,QACPL,IAEN,wBAAQG,KAAK,UACXlD,SAAU2C,EACV5C,MAAOQ,EACPuB,UAAU,YACVmB,UAAWP,EAJb,SAKGzB,IAGH,uBAAOiC,KAAK,QACVpD,KAAK,OACLC,MAAOqB,EACPU,UAAU,YACVxC,QAAS,kBAAMwD,GAAiB,IAChCO,UAAQ,EACRJ,UAAWP,IAEZG,GAAiBH,GAAW,cAACvB,EAAD,CAAYC,MAAOA,EAAOC,qBA1DnC,SAACpB,EAAGqB,GAC1BD,EAAqBpB,EAAGwC,EAAMnB,GAC9BwB,GAAiB,SA6DrB,SAASQ,EAAT,GAYI,IAXFC,EAWC,EAXDA,WACAd,EAUC,EAVDA,KACAC,EASC,EATDA,QACAc,EAQC,EARDA,iBACAZ,EAOC,EAPDA,0BACAa,EAMC,EANDA,kBACAC,EAKC,EALDA,uBACAC,EAIC,EAJDA,0BACAtC,EAGC,EAHDA,qBACAtC,EAEC,EAFDA,eACA6E,EACC,EADDA,OAEA,OACE,uBAAM9B,UAAU,oBAAoBsB,WAAW,QAA/C,UACE,cAACnB,EAAD,2BACMsB,GADN,IAEEd,KAAMA,EACNC,QAASA,EACTC,aAAc,SAAC1C,GAAD,OAAOuD,EAAiBvD,EAAGwC,IACzCG,0BAA2BA,EAC3BvB,qBAAsBA,EACtBtC,eAAgBA,KAElB,sBAAK+C,UAAU,YAAf,UACE,wBAAQxC,QAAS,SAACW,GAAD,OAAOyD,EAAuBzD,EAAGwC,IAAOQ,UAAWP,GAAWkB,EAA/E,SACE,mBAAG9B,UAAU,iBAEf,wBAAQxC,QAAS,SAACW,GAAD,OAAO0D,EAA0B1D,EAAGwC,IAAOQ,UAAWP,GAAWkB,EAAlF,SACE,mBAAG9B,UAAU,iBAEf,wBAAQxC,QAAS,SAACW,GAAD,OAAOwD,EAAkBxD,EAAGwC,IAAOQ,UAAWP,EAA/D,SACE,mBAAGZ,UAAU,wBAOvB,SAAS+B,EAAT,GAWI,IAVFC,EAUC,EAVDA,UACAC,EASC,EATDA,YACArB,EAQC,EARDA,QACAc,EAOC,EAPDA,iBACAZ,EAMC,EANDA,0BACAa,EAKC,EALDA,kBACAC,EAIC,EAJDA,uBACAC,EAGC,EAHDA,0BACAtC,EAEC,EAFDA,qBACAtC,EACC,EADDA,eAEMiF,EAAYpD,MAAMC,KAAKiD,GAAWhD,KAAI,YAAwB,IAAD,mBAArBmD,EAAqB,KAAhBV,EAAgB,KACjE,OACE,cAACD,EAAD,CACEC,WAAYA,EACZd,KAAMwB,EACNvB,QAASA,EACTc,iBAAkBA,EAClBZ,0BAA2BA,EAC3Ba,kBAAmBA,EACnBC,uBAAwBA,EACxBC,0BAA2BA,EAC3BtC,qBAAsBA,EACtBtC,eAAgBA,EAChB6E,QAASG,EAAYG,IAAID,IACpBA,MAKX,OACE,0BAAS7E,GAAG,aAAZ,UACE,cAAC8B,EAAD,IACC8C,KAgRP,IAAMhD,EAAe,SAACmD,GAAD,OAAeA,EACjCC,QAAQ,YAAY,SAACC,GAAD,iBAAeA,MACnCD,QAAQ,MAAM,SAACC,GAAD,OAAWA,EAAMC,iBAC/BC,QAEGC,EAAc,SAACC,GACnB,MAA0BxF,mBAAS,MAAnC,mBAAOyF,EAAP,KAAcC,EAAd,KACMlG,EAAMH,EAASG,IAAIgG,GAczB,OAZA/C,qBAAU,WACR,IAAMkD,EAAWnG,EAAIoG,GAAG,SAAS,SAAAC,GAC/B,IAAMC,EAAW,IAAIC,IACrBF,EAASG,SAAQ,SAAAlF,GAAWgF,EAASG,IAAInF,EAAMkE,QAE/CU,EAASI,MACR,SAACI,GACFC,QAAQC,IAAI,sBAAwBF,EAAK,kBAE3C,OAAO,kBAAM3G,EAAc8G,IAAI,QAASV,MAEvC,IACIF,GAGHa,EAAgB,SAACzE,GACrB,IAAM0E,EAAQ,IAAIC,IAElB,OADA3E,EAAImE,SAAQ,SAACS,EAAOzB,GAAR,OAAgBuB,EAAMG,IAAI1B,EAAK2B,EAAgBF,OACpDF,GAGHI,EAAkB,SAACrC,GACvB,IAAMsC,EAAa,GACnB,IAAK,IAAMC,KAAevC,EAAY,CACpC,IAAMwC,EAAgBxC,EAAWuC,GAE7BlF,MAAMoF,QAAQD,GAChBF,EAAWC,GAAX,YAA8BC,GAE9BF,EAAWC,GAAeC,EAG9B,OAAOF,GAIHI,EAAY,SAACC,EAAKC,GAAN,OAAoBC,OAAOC,KAAKH,GAC/CI,OAAOH,GAEPI,QAAO,SAACC,EAAKvC,GAAN,OAAeuC,EAAIvC,GAAOiC,EAAIjC,GAAMuC,IAAM,KAE9CC,EAAW,SAACC,GAAD,OAAaC,IAAUC,sBAAsBF,EAAS,GAAIC,IAAUE,iBAEtEC,EA5Tf,WAGE,MAA0C7H,mBAAS,IAAIwG,KAAvD,mBAAOsB,EAAP,KAAsBC,EAAtB,KACMC,EAAexF,iBAAO,IAAIgE,KAChC,EAAsCxG,mBAAS,IAAI+F,KAAnD,mBAAOjB,EAAP,KAAoBmD,EAApB,KACMC,EAAiB1F,kBAAO,GACxB1C,EAAiByF,EAAY,mBAC7BxF,EAAWwF,EAAY,aAC7B,EAAgCvF,oBAAS,GAAzC,mBAAOJ,EAAP,KAAiBuI,EAAjB,KA8NA,OAzNA1F,qBAAU,WAER,IAAMkD,EAAWpG,EAAcqG,GAAG,SAAS,SAAAC,GAGzC,IAAMuC,EAAe,IAAI5B,IACzBX,EAASG,SAAQ,SAAAqC,GACfD,EAAa1B,IAAI2B,EAAcrD,IAAKqD,EAAcC,OAElD,IAAM7B,EAAQ2B,EAAaG,IAAIF,EAAcrD,KAC7CyB,EAAMrD,cAAgBqD,EAAMpD,QAAQmF,KAAK,MACzC/B,EAAMnD,UAAYmD,EAAMlD,cAAciF,KAAK,SAE7CR,EAAatF,QAAU0F,EAEnBF,EAAexF,UACjBqF,EAAiBzB,EAAc8B,IAC/BF,EAAexF,SAAU,GAE3ByD,QAAQC,IAAI,gBAAiB,qBAC5B,SAAAF,GACDC,QAAQsC,MAAM,iBAAmBvC,MAEnC,OAAO,kBAAM3G,EAAc8G,IAAI,QAASV,MACvC,IAKHlD,qBAAU,WACRhE,IAASiK,OAAOC,oBAAmB,SAAAC,GAC7BA,GACFzC,QAAQC,IAAI,aACZ+B,GAAY,KAEZhC,QAAQC,IAAI,cACZ+B,GAAY,SAGf,IAmLD,sBAAKhI,GAAG,MAAR,UACE,cAACV,EAAD,CACEC,OAnLS,SAACa,EAAOC,GACrB/B,IAASiK,OAAOG,2BAA2BtI,EAAOC,GAC/CsI,OAAM,SAAA5C,GACLC,QAAQC,IAAIF,EAAI6C,MAChB5C,QAAQC,IAAIF,EAAI8C,aAgLhBrJ,QA5KU,WACOsJ,OAAOC,QAAQ,wCAKpCpE,EAAYkB,SAAQ,SAAAhB,GAClB8C,EAAcpB,IAAI1B,EAAK2B,EAAgBqB,EAAatF,QAAQ6F,IAAIvD,KAChE+C,EAAiB,IAAIvB,IAAIsB,OAG3BrJ,IAASiK,OAAO/I,UAAUmJ,OAAM,SAAA5C,GAAG,OAAIC,QAAQC,IAAIF,QAkK/CtG,SAAUA,EACVC,aAjCe,SAACmB,EAAGE,EAAME,EAAUI,EAAcF,GACrDN,EAAEmI,iBAEF,IAAMC,EAAiB,IAAI5C,IACrB6C,EAAyB,QAAZ/H,EACbgI,EAA0B,QAAjB9H,EACT+H,EAAmB,KAATrI,EAEVsI,EAA6B,YAAbpI,EACpB,SAACqF,GAAD,OAAWA,EAAMrF,GAAUqI,SAASvI,IACpC,SAACuF,GAAD,OAAWA,EAAMpD,QAAQiE,QAAO,SAACoC,EAAKC,GAAN,OAAcD,GAAOC,EAAIF,SAASvI,MAAO,IAE3E8G,EAAatF,QAAQsD,SAAQ,SAACS,EAAOzB,IAC9BqE,GAAc5C,EAAMnF,UAAYA,IAC/BgI,IAAU7C,EAAMlD,cAAckG,SAASjI,KACvC+H,IAAWC,EAAa/C,IAE5B2C,EAAe1C,IAAI1B,EAAK2B,EAAgBF,OAI5CsB,EAAiBqB,IAabtJ,eAAgBA,EAChBC,SAAUA,IAGZ,cAAC6E,EAAD,CACEC,UAAWiD,EACXhD,YAAaA,EACbrB,QAAS7D,EACT2E,iBAtKmB,SAACvD,EAAGgE,GAC3BhE,EAAEmI,iBAEF,IAAMC,EAAiB,IAAI5C,IAAIsB,GACVsB,EAAeb,IAAIvD,GACvBhE,EAAEC,OAAOgD,MAEDjD,EAAEC,OAAOH,MAClCmH,EAAe,IAAIlC,IAAIjB,GAAamB,IAAIjB,IACxC+C,EAAiBqB,IA8JbzF,0BA3J4B,SAAC3C,EAAGgE,GACpChE,EAAEmI,iBACF,IAAM1C,EAAQqB,EAAcS,IAAIvD,GAC5B4E,GAAgB,EAGC,KAAjBnD,EAAMtD,SACRsD,EAAMtD,OAASqE,EAASf,EAAMzF,EAAEC,OAAOgD,OACvC2F,GAAgB,GAGI,eAAlB5I,EAAEC,OAAOgD,MAA+C,KAAtBwC,EAAMvD,aAC1CuD,EAAMvD,YAAcwE,IAAUmC,4BAA4BpD,EAAMxD,YAChE2G,GAAgB,GACW,gBAAlB5I,EAAEC,OAAOgD,MAA+C,KAArBwC,EAAMxD,aAClDwD,EAAMxD,WAAayE,IAAUoC,2BAA2BrD,EAAMvD,aAC9D0G,GAAgB,GAGdA,GACF7B,EAAiB,IAAIvB,IAAIsB,KAwIvBtD,kBAnFoB,SAACxD,EAAGgE,GAC5BhE,EAAEmI,iBAEmBF,OAAOC,QAAQ,mBAGlC/C,QAAQC,IAAI,aACZ7G,EAAcwK,MAAM/E,GAAKgF,QAAO,SAAA9D,GAAG,OAAIA,EAAMC,QAAQsC,MAAM,GAAKvC,GAAOC,QAAQC,IAAI,oBACnF0B,EAAcmC,OAAOjF,GACrB+C,EAAiB,IAAIvB,IAAIsB,MA2EvBrD,uBArIyB,SAACzD,EAAGgE,GACjChE,EAAEmI,iBAGF,IAAMe,EAAepC,EAAcS,IAAIvD,GAgBvC,GAdAkF,EAAa7G,QAAU6G,EAAa9G,cACjC+B,QAAQ,aAAc,IACtBgF,MAAM,KACNtI,KAAI,SAAAuI,GAAC,OAAIA,EAAE9E,UAEd4E,EAAa3G,cAAgB2G,EAAa5G,UACvC6B,QAAQ,aAAc,IACtBgF,MAAM,KACNtI,KAAI,SAAAuI,GAAC,OAAIA,EAAE9E,UAEdyC,EAAiB,IAAIvB,IAAIsB,KAGLoC,EAAa3G,cAAc+D,QAAO,SAAC+C,EAAYvI,GAAb,OAAqBuI,GAActK,EAASkF,IAAInD,MAKpG,OAHAqE,QAAQC,IAAI,0BACZ8D,EAAa3G,cAAb,YAAiCyE,EAAatF,QAAQ6F,IAAIvD,GAAKzB,oBAC/DwE,EAAiB,IAAIvB,IAAIsB,IAK3BvI,EAAcwK,MAAM/E,GAAKsF,OAAOtD,EAAUkD,GACxC,SAAClF,GAAD,MAAkB,kBAARA,GAAmC,cAARA,MACpC,SAAAkB,GACDA,EAAMC,QAAQsC,MAAM,kBAAoBvC,GAAOC,QAAQC,IAAI,wBAG7D,IAAMmE,EAAU,IAAIxE,IAAIjB,GACxByF,EAAQN,OAAOjF,GACfiD,EAAesC,IAkGX7F,0BA/F4B,SAAC1D,EAAGgE,GACpChE,EAAEmI,iBAEFpB,EAAiB,IAAIvB,IAAIsB,EAAcpB,IAAI1B,EAAK2B,EAAgBqB,EAAatF,QAAQ6F,IAAIvD,OAEzF,IAAMuF,EAAU,IAAIxE,IAAIjB,GACxByF,EAAQN,OAAOjF,GACfiD,EAAesC,IAyFXnI,qBArDuB,SAACpB,EAAGgE,EAAK3C,GACpCyF,EAAcS,IAAIvD,GAAK7C,MAAQE,EAC/B4F,EAAe,IAAIlC,IAAIjB,GAAamB,IAAIjB,IACxC+C,EAAiB,IAAIvB,IAAIsB,KAmDrBhI,eAAgBA,IAEjBF,GAAY,wBAAQS,QA5EF,SAACW,GACtBA,EAAEmI,iBAEF,IAAMqB,EAAa,CACjBvH,WAAY,GACZC,YAAa,GACbC,OAAQ,GACRE,QAAS,GACTE,cAAe,CAAC,IAChBjC,QAAS,SACTa,MAAO,IAEH6C,EAAMzF,EAAckL,KAAKD,GAAY,SAAAtE,GAAG,OAAIA,EAAMC,QAAQsC,MAAM,GAAKvC,GAAOC,QAAQC,IAAI,qBAAmBpB,IAEjHwF,EAAWpH,cAAgB,GAC3BoH,EAAWlH,UAAY,GAEvByE,EAAiB,IAAIvB,IAAIsB,GAAepB,IAAI1B,EAAKwF,KA2DlC,2BCzjBnBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f57ef354.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport pinyin4js from 'pinyin4js';\nimport '@fortawesome/fontawesome-free/js/all.js';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDIefnuJTzI4sUlFuNoRepOM6GDMsPdHTU\",\n  authDomain: \"vocabapp-3741c.firebaseapp.com\",\n  databaseURL: \"https://vocabapp-3741c-default-rtdb.firebaseio.com\",\n  projectId: \"vocabapp-3741c\",\n  storageBucket: \"vocabapp-3741c.appspot.com\",\n  messagingSenderId: \"194089023131\",\n  appId: \"1:194089023131:web:5d5f74308d24971c9bf83e\"\n};\n!firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app()\nconst DATABASE = firebase.database();\nconst vocabDatabase = DATABASE.ref(\"/vocab\");\n\nfunction MainMenu({\n  signIn,\n  signOut,\n  signedIn,\n  handleSearch,\n  validFluencies,\n  validPOS,\n}) {\n  const [signInOpen, setSignInOpen] = useState(false);\n\n  const handleSignIn = (email, password) => {\n    signIn(email, password);\n    setSignInOpen(false);\n  }\n\n  return (\n    <div id=\"MainMenu\">\n      <SearchBar\n        handleSearch={handleSearch}\n        validFluencies={validFluencies}\n        validPOS={validPOS}\n      />\n\n      {(!signedIn && !signInOpen) && <button onClick={() => setSignInOpen(true)}>Sign In</button>}\n      {signedIn && <button onClick={signOut}>Sign Out</button>}\n      {signInOpen && <SignInDialouge signIn={handleSignIn} handleCloseSignIn={() => setSignInOpen(false)} />}\n\n    </div>\n  );\n}\n\nfunction SignInDialouge({\n  signIn,\n  handleCloseSignIn\n}) {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <div id=\"SignInDialouge\">\n      <label htmlFor=\"email\">Email:</label>\n      <input id=\"email\" type='email' value={email} onChange={(e) => setEmail(e.target.value)}></input>\n      <label htmlFor=\"password\">Password:</label>\n      <input id=\"password\" type='password' value={password} onChange={(e) => setPassword(e.target.value)}></input>\n      <button onClick={(e) => signIn(email, password)}>Sign In</button>\n      <button onClick={handleCloseSignIn}>Cancel</button>\n    </div>\n  );\n}\n\nfunction SearchBar({\n  handleSearch,\n  validFluencies,\n  validPOS\n}) {\n  const [text, setText] = useState(\"\");\n  const [language, setLanguage] = useState(\"english\");\n  const [fluency, setFluency] = useState(\"any\");\n  const [partOfSpeech, setPOS] = useState(\"any\");\n\n  const POSOptions = validPOS ? Array.from(validPOS)\n    .map((pos) => <option value={pos} key={pos}>{camelToTitle(pos)}</option>) : \"\";\n\n  const fluencyOptions = validFluencies ? Array.from(validFluencies)\n    .map(fluency => <option value={fluency} key={fluency}>{camelToTitle(fluency)}</option>) : \"\";\n\n  return (\n    <div id=\"SearchBar\" >\n      <div>Search</div>\n      <form>\n        Search Language:\n        <select value={language} onChange={(e) => setLanguage(e.target.value)}>\n          <option value=\"simplified\">中文 (Simplified)</option>\n          <option value=\"traditional\">中文 (Traditional)</option>\n          <option value=\"pinyin\">拼音</option>\n          <option value=\"english\">English</option>\n        </select>\n\n        Part of Speech:\n        <select value={partOfSpeech} onChange={(e) => setPOS(e.target.value)}>\n          <option value=\"any\">Any</option>\n          {POSOptions}\n        </select>\n\n        Fluency Level:\n        <select value={fluency} onChange={(e) => setFluency(e.target.value)}>\n          <option value=\"any\">Any</option>\n          {fluencyOptions}\n        </select>\n\n        <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\n\n        <button onClick={(e) => handleSearch(e, text, language, partOfSpeech, fluency)}>Go!</button>\n      </form>\n    </div>\n  );\n}\n\nfunction VocabHeader() {\n  return (\n    <header id=\"VocabHeader\">\n      <div>Simplified</div>\n      <div>Traditional</div>\n      <div>Pinyin</div>\n      <div id=\"english\">English</div>\n      <div>Parts of Speech</div>\n      <div>Fluency</div>\n      <div id=\"notes\">Grammar</div>\n      <div id=\"entryBtns\"></div>\n    </header>\n  );\n}\n\nfunction NotesInput({\n  notes,\n  handleNotesInputDone\n}) {\n  const [newNotes, setNewNotes] = useState(notes);\n  const textArea = useRef(null);\n\n  useEffect(() => {\n    textArea.current.focus();\n    textArea.current.setSelectionRange(textArea.current.value.length, textArea.current.value.length);\n  }, []);\n\n  return (\n    <div className=\"NotesInput\">\n      <div>\n        <textarea rows=\"10\" cols=\"50\" value={newNotes} onChange={(e) => setNewNotes(e.target.value)} ref={textArea}></textarea>\n        <button onClick={(e) => handleNotesInputDone(e, newNotes)}>Done</button>\n      </div>\n    </div>\n  );\n}\n\nfunction VocabEntry({\n  simplified,\n  traditional,\n  pinyin,\n  english,\n  englishString,\n  partsOfSpeech,\n  posString,\n  fluency,\n  notes,\n  _key,\n  canEdit,\n  handleChange,\n  handleEntryChineseUnfocus,\n  handleNotesInputDone,\n  validFluencies,\n}) {\n  const [notesExpanded, setNotesExpanded] = useState(false);\n  const fluencyOptions = Array.from(validFluencies).map(fluency => <option key={fluency} value={fluency}>{camelToTitle(fluency)}</option>);\n  const handleNotesDone = (e, newNotes) => {\n    handleNotesInputDone(e, _key, newNotes);\n    setNotesExpanded(false);\n  }\n\n  const textAreaProps = {\n    wrap: \"soft\",\n    onChange: handleChange,\n    disabled: !canEdit,\n    className: \"vocabCell\"\n  }\n\n  return (\n    <div className=\"VocabEntry\">\n\n      <TextareaAutosize\n        name=\"simplified\"\n        value={simplified}\n        onBlur={(e) => handleEntryChineseUnfocus(e, _key)}\n        {...textAreaProps} />\n\n      <TextareaAutosize\n        name=\"traditional\"\n        value={traditional}\n        onBlur={(e) => handleEntryChineseUnfocus(e, _key)}\n        {...textAreaProps} />\n\n      <TextareaAutosize\n        name=\"pinyin\"\n        value={pinyin}\n        {...textAreaProps} />\n\n      <TextareaAutosize name=\"englishString\"\n        value={englishString}\n        spellCheck=\"true\"\n        {...textAreaProps} />\n\n      <TextareaAutosize name=\"posString\"\n        value={posString}\n        spellCheck=\"true\"\n        {...textAreaProps} />\n\n      <select name=\"fluency\"\n        onChange={handleChange}\n        value={fluency}\n        className=\"vocabCell\"\n        disabled={!canEdit}>\n        {fluencyOptions}\n      </select>\n\n      <input name=\"notes\"\n        type=\"text\"\n        value={notes}\n        className=\"vocabCell\"\n        onClick={() => setNotesExpanded(true)}\n        readOnly\n        disabled={!canEdit} />\n\n      {notesExpanded && canEdit && <NotesInput notes={notes} handleNotesInputDone={handleNotesDone} />}\n    </div>\n  );\n}\n\nfunction VocabEntryWrapper({\n  vocabEntry,\n  _key,\n  canEdit,\n  handleCellChange,\n  handleEntryChineseUnfocus,\n  handleEntryDelete,\n  handleEntrySaveChanges,\n  handleEntryDiscardChanges,\n  handleNotesInputDone,\n  validFluencies,\n  edited,\n}) {\n  return (\n    <form className=\"VocabEntryWrapper\" spellCheck=\"false\">\n      <VocabEntry\n        {...vocabEntry}\n        _key={_key}\n        canEdit={canEdit}\n        handleChange={(e) => handleCellChange(e, _key)}\n        handleEntryChineseUnfocus={handleEntryChineseUnfocus}\n        handleNotesInputDone={handleNotesInputDone}\n        validFluencies={validFluencies}\n      />\n      <div className=\"entryBtns\">\n        <button onClick={(e) => handleEntrySaveChanges(e, _key)} disabled={!canEdit || edited}>\n          <i className=\"fa fa-save\"></i>\n        </button>\n        <button onClick={(e) => handleEntryDiscardChanges(e, _key)} disabled={!canEdit || edited}>\n          <i className=\"fa fa-undo\"></i>\n        </button>\n        <button onClick={(e) => handleEntryDelete(e, _key)} disabled={!canEdit}>\n          <i className=\"fa fa-trash\"></i>\n        </button>\n      </div>\n    </form>\n  );\n}\n\nfunction VocabTable({\n  vocabList,\n  editedVocab,\n  canEdit,\n  handleCellChange,\n  handleEntryChineseUnfocus,\n  handleEntryDelete,\n  handleEntrySaveChanges,\n  handleEntryDiscardChanges,\n  handleNotesInputDone,\n  validFluencies,\n}) {\n  const tableBody = Array.from(vocabList).map(([key, vocabEntry]) => {\n    return (\n      <VocabEntryWrapper\n        vocabEntry={vocabEntry}\n        _key={key}\n        canEdit={canEdit}\n        handleCellChange={handleCellChange}\n        handleEntryChineseUnfocus={handleEntryChineseUnfocus}\n        handleEntryDelete={handleEntryDelete}\n        handleEntrySaveChanges={handleEntrySaveChanges}\n        handleEntryDiscardChanges={handleEntryDiscardChanges}\n        handleNotesInputDone={handleNotesInputDone}\n        validFluencies={validFluencies}\n        edited={!editedVocab.has(key)}\n        key={key}\n      />\n    );\n  });\n\n  return (\n    <section id=\"VocabTable\">\n      <VocabHeader />\n      {tableBody}\n    </section>\n  );\n}\n\n// ----------------------------------------------------------------------\n// App\n// ----------------------------------------------------------------------\nfunction App() {\n  // TODO: memoize fluency options\n  // TODO: memoize pos options\n  const [renderedVocab, setRenderedVocab] = useState(new Map());  // vocab rendered to screen, modified subset of fullVocabMap\n  const fullVocabMap = useRef(new Map());                         // identical to db vocab\n  const [editedVocab, setEditedVocab] = useState(new Set());      // subset of rendered vocab that have been edited but not saved\n  const isInitialMount = useRef(true);                            // tracks the first db mount\n  const validFluencies = useFetchSet(\"/validFluencies\");          // possible fluencies \n  const validPOS = useFetchSet(\"/validPOS\");                      // possible parts of speech \n  const [signedIn, setSignedIn] = useState(false);\n\n  // ----------------------------------------\n  // Database \n  // ----------------------------------------\n  useEffect(() => {\n    // fetches vocab from the database everytime the database updates\n    const listener = vocabDatabase.on('value', snapshot => {\n\n      // fetch vocab entries from db\n      const vocabEntries = new Map();\n      snapshot.forEach(entrySnapshot => {\n        vocabEntries.set(entrySnapshot.key, entrySnapshot.val());\n\n        const entry = vocabEntries.get(entrySnapshot.key);\n        entry.englishString = entry.english.join(\", \");\n        entry.posString = entry.partsOfSpeech.join(\", \");\n      });\n      fullVocabMap.current = vocabEntries;\n\n      if (isInitialMount.current) {\n        setRenderedVocab(cloneVocabMap(vocabEntries));\n        isInitialMount.current = false;\n      }\n      console.log(\"%cfetching db\", \"color: yellow;\");\n    }, err => {\n      console.error(\"failed fetch: \" + err);\n    });\n    return () => vocabDatabase.off('value', listener);\n  }, []);\n\n  // ----------------------------------------\n  // Authentication\n  // ----------------------------------------\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"signed in\");\n        setSignedIn(true);\n      } else {\n        console.log(\"signed out\");\n        setSignedIn(false);\n      }\n    });\n  }, []);\n\n  const signIn = (email, password) => {\n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .catch(err => {\n        console.log(err.code);\n        console.log(err.message);\n      });\n  }\n\n  const signOut = () => {\n    const confirmation = window.confirm(\"Unsaved changes will be discarded.\");\n    if (!confirmation) {\n      return;\n    }\n\n    editedVocab.forEach(key => {\n      renderedVocab.set(key, cloneVocabEntry(fullVocabMap.current.get(key)));\n      setRenderedVocab(new Map(renderedVocab));\n    });\n\n    firebase.auth().signOut().catch(err => console.log(err))\n  };\n\n  // ----------------------------------------\n  // Events\n  // ----------------------------------------\n  const handleCellChange = (e, key) => {\n    e.preventDefault();\n\n    const newRenderVocab = new Map(renderedVocab);\n    const updatedEntry = newRenderVocab.get(key);\n    const property = e.target.name;\n\n    updatedEntry[property] = e.target.value;\n    setEditedVocab(new Set(editedVocab).add(key));\n    setRenderedVocab(newRenderVocab);\n  }\n\n  const handleEntryChineseUnfocus = (e, key) => {\n    e.preventDefault();\n    const entry = renderedVocab.get(key);\n    let needsRerender = false;\n\n    // autofill pinyin if necessary\n    if (entry.pinyin === \"\") {\n      entry.pinyin = toPinyin(entry[e.target.name]);\n      needsRerender = true;\n    }\n\n    if (e.target.name === \"simplified\" && entry.traditional === \"\") {\n      entry.traditional = pinyin4js.convertToTraditionalChinese(entry.simplified);\n      needsRerender = true;\n    } else if (e.target.name === \"traditional\" && entry.simplified === \"\") {\n      entry.simplified = pinyin4js.convertToSimplifiedChinese(entry.traditional);\n      needsRerender = true;\n    }\n\n    if (needsRerender) {\n      setRenderedVocab(new Map(renderedVocab));\n    };\n  }\n\n  const handleEntrySaveChanges = (e, key) => {\n    e.preventDefault();\n\n    // trim array inputs\n    const updatedEntry = renderedVocab.get(key);\n\n    updatedEntry.english = updatedEntry.englishString\n      .replace(/[\\r\\n\\v]+/g, '')\n      .split(\",\")\n      .map(s => s.trim())\n\n    updatedEntry.partsOfSpeech = updatedEntry.posString\n      .replace(/[\\r\\n\\v]+/g, '')\n      .split(\",\")\n      .map(s => s.trim())\n\n    setRenderedVocab(new Map(renderedVocab));\n\n    // validate parts of speech\n    const hasValidPOS = updatedEntry.partsOfSpeech.reduce((validation, pos) => validation && validPOS.has(pos));\n    if (!hasValidPOS) {\n      console.log(\"invalid part of speech\");\n      updatedEntry.partsOfSpeech = [...fullVocabMap.current.get(key).partsOfSpeech];\n      setRenderedVocab(new Map(renderedVocab));\n      return;\n    }\n\n    // push change to db\n    vocabDatabase.child(key).update(filterObj(updatedEntry,\n      (key) => (key !== \"englishString\" && key !== \"posString\")\n    ), err => {\n      err ? console.error(\"failed update: \" + err) : console.log(\"successful update\");\n    });\n    // remove from unsaved list \n    const unsaved = new Set(editedVocab);\n    unsaved.delete(key);\n    setEditedVocab(unsaved);\n  }\n\n  const handleEntryDiscardChanges = (e, key) => {\n    e.preventDefault();\n    // reset entry from fullVocabMap\n    setRenderedVocab(new Map(renderedVocab.set(key, cloneVocabEntry(fullVocabMap.current.get(key)))));\n    // remove entry from unsaved list\n    const unsaved = new Set(editedVocab);\n    unsaved.delete(key);\n    setEditedVocab(unsaved);\n  }\n\n  const handleEntryDelete = (e, key) => {\n    e.preventDefault();\n\n    const confirmation = window.confirm(\"Delete Entry?\");\n\n    if (confirmation) {\n      console.log(\"confirmed\");\n      vocabDatabase.child(key).remove(err => err ? console.error(\"\" + err) : console.log(\"deleted entry\"));\n      renderedVocab.delete(key);\n      setRenderedVocab(new Map(renderedVocab));\n    }\n  }\n\n  const handleAddVocab = (e) => {\n    e.preventDefault();\n\n    const blankVocab = {\n      simplified: \"\",\n      traditional: \"\",\n      pinyin: \"\",\n      english: \"\",\n      partsOfSpeech: [\"\"],\n      fluency: \"fluent\",\n      notes: \"\",\n    }\n    const key = vocabDatabase.push(blankVocab, err => err ? console.error(\"\" + err) : console.log(\"successful add\")).key;\n\n    blankVocab.englishString = \"\";\n    blankVocab.posString = \"\";\n\n    setRenderedVocab(new Map(renderedVocab).set(key, blankVocab));\n  }\n\n  const handleNotesInputDone = (e, key, newNotes) => {\n    renderedVocab.get(key).notes = newNotes;\n    setEditedVocab(new Set(editedVocab).add(key));\n    setRenderedVocab(new Map(renderedVocab));\n  };\n\n  const handleSearch = (e, text, language, partOfSpeech, fluency) => {\n    e.preventDefault();\n\n    const newRenderVocab = new Map();\n    const anyFluency = fluency === \"any\";\n    const anyPOS = partOfSpeech === \"any\";\n    const anyText = text === \"\";\n\n    const entryHasText = (language !== \"english\") ?\n      (entry) => entry[language].includes(text) :\n      (entry) => entry.english.reduce((all, str) => all || str.includes(text), false);\n\n    fullVocabMap.current.forEach((entry, key) => {\n      if ((anyFluency || entry.fluency === fluency)\n        && (anyPOS || entry.partsOfSpeech.includes(partOfSpeech))\n        && (anyText || entryHasText(entry))\n      ) {\n        newRenderVocab.set(key, cloneVocabEntry(entry));\n      }\n    });\n\n    setRenderedVocab(newRenderVocab);\n  }\n\n  // ----------------------------------------\n  // Render\n  // ----------------------------------------\n  return (\n    <div id=\"App\">\n      <MainMenu\n        signIn={signIn}\n        signOut={signOut}\n        signedIn={signedIn}\n        handleSearch={handleSearch}\n        validFluencies={validFluencies}\n        validPOS={validPOS}\n      />\n\n      <VocabTable\n        vocabList={renderedVocab}\n        editedVocab={editedVocab}\n        canEdit={signedIn}\n        handleCellChange={handleCellChange}\n        handleEntryChineseUnfocus={handleEntryChineseUnfocus}\n        handleEntryDelete={handleEntryDelete}\n        handleEntrySaveChanges={handleEntrySaveChanges}\n        handleEntryDiscardChanges={handleEntryDiscardChanges}\n        handleNotesInputDone={handleNotesInputDone}\n        validFluencies={validFluencies}\n      />\n      {signedIn && <button onClick={handleAddVocab}>Add Vocab</button>}\n    </div>\n  );\n}\n\n// ----------------------------------------------------------------------\n// Helpers\n// ----------------------------------------------------------------------\n\n// https://stackoverflow.com/a/39718708/9396808\nconst camelToTitle = (camelCase) => camelCase\n  .replace(/([A-Z])/g, (match) => ` ${match}`)\n  .replace(/^./, (match) => match.toUpperCase())\n  .trim();\n\nconst useFetchSet = (refStr) => {\n  const [state, setState] = useState(null);\n  const ref = DATABASE.ref(refStr);\n\n  useEffect(() => {\n    const listener = ref.on('value', snapshot => {\n      const newState = new Set();\n      snapshot.forEach(value => { newState.add(value.key) }\n      );\n      setState(newState);\n    }, (err) => {\n      console.log('%cThe read failed: ' + err, \"color: red;\");\n    });\n    return () => vocabDatabase.off('value', listener);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return state;\n}\n\nconst cloneVocabMap = (map) => {\n  const clone = new Map();\n  map.forEach((entry, key) => clone.set(key, cloneVocabEntry(entry)));\n  return clone;\n}\n\nconst cloneVocabEntry = (vocabEntry) => {\n  const entryClone = {};\n  for (const propertyKey in vocabEntry) {\n    const propertyValue = vocabEntry[propertyKey];\n\n    if (Array.isArray(propertyValue)) {\n      entryClone[propertyKey] = [...propertyValue];\n    } else {\n      entryClone[propertyKey] = propertyValue;\n    }\n  }\n  return entryClone;\n}\n\n// https://stackoverflow.com/a/37616104/9396808\nconst filterObj = (obj, predicate) => Object.keys(obj)\n  .filter(predicate)\n  // eslint-disable-next-line no-sequences\n  .reduce((res, key) => (res[key] = obj[key], res), {});\n\nconst toPinyin = (chinese) => pinyin4js.convertToPinyinString(chinese, '', pinyin4js.WITH_TONE_MARK);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}